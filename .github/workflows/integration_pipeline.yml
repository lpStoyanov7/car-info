name: Integration (Automatic)

on:
  push:
    branches: [ main, release/**, develop-* ]
# pull_request:
#   types: [opened, synchronize, reopened]
#   branches: [main, release/**, develop-*]

jobs:
  # Code
  editorconfig-check:
    name: .editorconfig lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@v1

  markdown-lint:
    name: markdown lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npx markdownlint-cli **/*.md

  #Build
  build:
    needs: [ editorconfig-check, markdown-lint ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: |
          mvn clean install -Dmaven.test.skip=true

      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: car-info-0.0.1-SNAPSHOT
          path: target/*.jar
          if-no-files-found: error
          retention-days: 1

  # push to registry
  push_to_registry:
    needs: [ editorconfig-check, markdown-lint , build ]
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.DOCKER_REPOSITORY }}
          tags: |
            type=sha,format=long

      - name: Build and push Docker image
#        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.DOCKER_REPOSITORY }}:sha-${{ github.sha }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"